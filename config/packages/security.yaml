security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'

        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                target: /login
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/, roles: ROLE_ADMIN}
         - { path: ^/scheda_pai/sincronizza_progetti, roles: ROLE_ADMIN}
         - { path: ^/profilo/, roles: [ROLE_USER, ROLE_ADMIN]}
         - { path: ^/scheda_pai/app_scadenzario_index/, roles: [ROLE_USER, ROLE_ADMIN]}
         - { path: ^/scheda_pai/app_scheda_pai_index/, roles: [ROLE_ADMIN]}
         - { path: ^/valutazione_generale/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/valutazione_figura_professionale/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/chiusura_servizio/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/parere_mmg/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/barthel/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/braden/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/spmsq/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/tinetti/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/vas/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/lesioni/, roles: [ROLE_ADMIN, ROLE_USER]}
         - { path: ^/scheda_pai, roles: ROLE_ADMIN}
         - { path: ^/scadenzario, roles: [ROLE_ADMIN, ROLE_USER]}
    role_hierarchy:
        ROLE_ADMIN: ROLE_ALLOWED_TO_SWITCH
        

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
